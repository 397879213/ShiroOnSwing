package com.opass.security.test;


import com.opass.security.Authenticator;
import javax.swing.JOptionPane;
import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authz.AuthorizationException;
import org.apache.shiro.session.Session;
import org.apache.shiro.subject.Subject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author agung
 */
public class testForm extends javax.swing.JFrame {

     private static final Logger log = LoggerFactory.getLogger(testForm.class);  
    private static final long serialVersionUID = -4299087640201088650L;
    private Authenticator authenticator;
    private Subject currentUser;
    private Session session;

    /**
     * Creates new form testForm
     */
    public testForm() {
       
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        btnCek = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Shiro Test");

        jLabel1.setText("Username :");

        jLabel2.setText("Password :");

        btnLogin.setText("Login");
        btnLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnCek.setText("Cek");
        btnCek.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCekActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCek, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                    .addComponent(txtUsername))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogin)
                    .addComponent(btnCek))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed

        if (btnLogin.getText().equals("Login")){
        String userName = txtUsername.getText();
        String password = txtPassword.getText();

        authenticator = new Authenticator();

        currentUser = authenticator.authenticate(userName,password);

        if (currentUser.isAuthenticated()) {
            session = currentUser.getSession();

            //Storing some attributes
            session.setAttribute("Connected", "yes");
            session.setAttribute("Group", "TB");

            //Retrieving attributes later on 
            String attribute = session.getAttribute("Connected").toString();
            String Group = session.getAttribute("Group").toString();

            System.out.println("Connected : " + attribute);
            System.out.println("Group : " + Group);
            btnLogin.setText("Logout");
            txtUsername.setEnabled(false);
            txtPassword.setEnabled(false);
            JOptionPane.showMessageDialog(rootPane,"Login Success!!!");
        } else {
            JOptionPane.showMessageDialog(rootPane,"Could not authenticate user");
            //System.out.println("Could not authenticate user");
        }
        }
        else{
         currentUser = SecurityUtils.getSubject();
         currentUser.logout();
         btnLogin.setText("Login");
         txtUsername.setEnabled(true);
            txtPassword.setEnabled(true);
         JOptionPane.showMessageDialog(rootPane,"Logout Success!!!");
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnCekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCekActionPerformed
        getCurrentUser();
    }//GEN-LAST:event_btnCekActionPerformed

    public void getCurrentUser() {
        currentUser = SecurityUtils.getSubject();

        if (currentUser.isAuthenticated()) {
            //String mail = (String) currentUser.getSession().getAttribute("username");

            //System.out.println(mail);
            //System.out.println("authrn");

           // throws UnauthorizedException if the user has no permission
           //currentUser.checkPermission("admin:access");
            try {
if(currentUser.hasRole("TB")){
			System.out.println("has role TB");
		}else{
			System.out.println("has no role");
		}
if(currentUser.isPermitted("user:read")){
			System.out.println("User is permitted to read");
		}else{
			System.out.println("User is NOT permitted to read");
		}
if(currentUser.isPermitted("user:delete")){
			System.out.println("User is permitted to delete");
		}else{
			System.out.println("User is NOT permitted to delete");
		}
if(currentUser.isPermitted("user:write")){
			System.out.println("User is permitted to write");
		}else{
			System.out.println("User is NOT permitted to write");
		}
if(currentUser.isPermitted("branch:write")){
			System.out.println("User is permitted to write branch");
		}else{
			System.out.println("User is NOT permitted to write branch");
		}
if(currentUser.isPermitted("branch:read")){
			System.out.println("User is permitted to read branch");
		}else{
			System.out.println("User is NOT permitted to read branch");
		}
if(currentUser.isPermitted("branch:delete")){
			System.out.println("User is permitted to delete branch");
		}else{
			System.out.println("User is NOT permitted to delete branch");
		}
            } catch (AuthorizationException ae) {
                System.out.println(ae);
            }

        } else {
            System.out.println("not authen");
        }
    }

//    public String getUserByEmail(String email) {
//    //Session session = HibernateUtil.getCurrentSession();
//    //session.beginTransaction();
//    //User user = (User) session.createQuery("from User where email=?").setString(0, email).uniqueResult();
//    //session.getTransaction().commit();
//    //return email;
//  }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(testForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(testForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(testForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(testForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new testForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCek;
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
